basic:
  checkpoint: null # set to -1 to load last saved model, or path to specific model
  headless: true  # Run headless for faster training
  max_iterations: 10000 # More iterations for imitation learning
  sim_device: "cuda:0" # device for physics simulation
  rl_device: "cuda:0" # device for the RL algorithm
  seed: 42 # seed - set to -1 to choose random seed
  description: "T1 Motion Imitation Learning"
  task: "T1Imitation"

env:
  num_envs: 4096
  num_observations: 80  # T1_serial.urdf full body model has more observations
  num_privileged_obs: 14
  num_actions: 23  # Full body T1_serial.urdf model (head + arms + waist + legs)
  env_spacing: 4.  # Increase spacing to prevent robot collisions during dancing

runner:
  horizon_length: 32  # Faster policy updates (was 64) - 2x speedup
  mini_epochs: 8      # Less computation per iteration (was 20) - 2.5x speedup  
  save_interval: 50   # Save more frequently for safety
  use_wandb: false    # Disable wandb - use console + TensorBoard for headless monitoring
  console_log_interval: 20  # More frequent feedback (was 50)

viewer:
  pos: [3., -3., 2.]  # [m]
  lookat: [0., 0., 0.]  # [m]
  record_video: false  # Disable video recording for faster training
  record_interval: 5.  # [s]
  record_env_idx: 0

algorithm:
  learning_rate: 1.e-5  # Faster learning (was 5e-6) - 2x speedup
  gamma: 0.995
  lam: 0.95
  bound_coef: 1.0
  entropy_coef: -0.01
  symmetric_coef: 10.
  desired_kl: 0.01

sim:
  dt: 0.004  # Faster simulation (was 0.002) - 2x speedup
  substeps: 1
  up_axis: "z"
  gravity: [0.0, 0.0, -9.81]
  physics_engine: "physx" # "physx" or "flex"
  physx:
    num_threads: 4 # Number of worker threads per scene used by PhysX - for CPU PhysX only.
    solver_type: 1 # 0: pgs, 1: tgs
    num_position_iterations: 4
    num_velocity_iterations: 1
    contact_offset: 0.02
    rest_offset: 0.0
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 100.0
    default_buffer_size_multiplier: 5.0
    max_gpu_contact_pairs: 8388608 # 8*1024*1024
    num_subscenes: 4 # Splits the simulation into N physics scenes and runs each one in a separate thread
    contact_collection: 1 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (broken - do not use!)

asset:
  file: "resources/T1/T1_serial.urdf"  # Use the full body model for dancing
  mujoco_file: "resources/T1/T1_serial.xml"
  name: "T1"
  base_name: "Trunk"
  foot_names: ["left_foot_link", "right_foot_link"]
  disable_gravity: false
  default_dof_drive_mode: 3 # see GymDofDriveModeFlags (0 is none, 1 is pos tgt, 2 is vel tgt, 3 effort)
  collapse_fixed_joints: true
  fix_base_link: false # fix the base of the robot
  self_collisions: 0 # 1 to disable, 0 to enable...bitwise filter
  replace_cylinder_with_capsule: false # replace collision cylinders with capsules, leads to faster/more stable simulation
  flip_visual_attachments: false # Some .obj meshes must be flipped from y-up to z-up
  density: 0.001
  angular_damping: 0.
  linear_damping: 0.
  max_angular_velocity: 1000.
  max_linear_velocity: 1000.
  armature: 0.
  thickness: 0.01
  feet_edge_pos: [[ 0.1215,  0.05, -0.03],
                  [ 0.1215, -0.05, -0.03],
                  [-0.1015,  0.05, -0.03],
                  [-0.1015, -0.05, -0.03]] # x,y,z [m]

init_state:
  pos: [0.0, 0.0, 0.72] # x,y,z [m] - RESTORED to original working height
  rot: [0.0, 0.0, 0.0, 1.0] # x,y,z,w [quat]
  lin_vel: [0.0, 0.0, 0.0]  # x,y,z [m/s]
  ang_vel: [0.0, 0.0, 0.0]  # x,y,z [rad/s]
  # Default joint angles for all 21 DOFs (DEPLOYMENT EXACT)
  default_joint_angles: {
    # Arms (4 DOF each) - EXACT deployment pose for arm stability
    "Left_Shoulder_Pitch": 0.2, "Left_Shoulder_Roll": -1.35, "Left_Elbow_Pitch": 0.0, "Left_Elbow_Yaw": -0.5,
    "Right_Shoulder_Pitch": 0.2, "Right_Shoulder_Roll": 1.35, "Right_Elbow_Pitch": 0.0, "Right_Elbow_Yaw": 0.5,
    # Waist
    "Waist": 0.0,
    # Legs (6 DOF each) - EXACT deployment pose  
    "Hip_Pitch": -0.2, "Hip_Roll": 0.0, "Hip_Yaw": 0.0, "Knee_Pitch": 0.4, "Ankle_Pitch": -0.25, "Ankle_Roll": 0.0,
    "default": 0.
  }

control:
  # PD gains for all joints
  stiffness: {
    # Head - low stiffness for smooth motion (exact joint names)
    "AAHead_yaw": 20., "Head_pitch": 20.,
    # Arms - lower stiffness for compliance
    "Left_Shoulder": 50., "Left_Elbow": 30., "Shoulder": 50., "Elbow": 30.,
    "Right_Shoulder": 50., "Right_Elbow": 30., 
    "AL": 50., "AR": 50.,  # Arm links
    # Waist/Torso
    "Waist": 100., "Trunk": 100.,
    # Legs - RESTORED to original working stiffness
    "Hip": 200., "Knee": 200., "Ankle": 50.
  }
  damping: {
    # Head - low damping for smooth motion (exact joint names)
    "AAHead_yaw": 1., "Head_pitch": 1.,
    # Arms
    "Left_Shoulder": 2., "Left_Elbow": 1., "Shoulder": 2., "Elbow": 1.,
    "Right_Shoulder": 2., "Right_Elbow": 1.,
    "AL": 2., "AR": 2.,  # Arm links
    # Waist/Torso
    "Waist": 3., "Trunk": 3.,
    # Legs - EXACT deployment damping
    "Hip": 5., "Knee": 5., "Ankle": 3.
  }
  action_scale: 1.0  # RESTORED to original working value
  decimation: 5  # Higher control frequency for better PKL tracking (was 10)

terrain:
  type: "plane" # Use plane for imitation learning initially
  static_friction: 1.0  # [-]
  dynamic_friction: 1.0  # [-]
  restitution: 0.        # [-]

commands:
  num_commands: 3 # default: lin_vel_x, lin_vel_y, ang_vel_yaw
  still_proportion: 0.5  # Higher proportion of still commands for imitation
  lin_vel_x: [-0.5, 0.5] # Reduced velocity range for imitation
  lin_vel_y: [-0.5, 0.5] 
  ang_vel_yaw: [-0.5, 0.5]   
  lin_vel_levels: 10  # Number of velocity levels for curriculum
  ang_vel_levels: 10  # Number of angular velocity levels for curriculum
  resampling_time_s: [10., 15.]  # Longer resampling for stable imitation
  gait_frequency: [1.0, 2.0] 
  curriculum: false

normalization:
  gravity: 1.0
  lin_vel: 1.0
  ang_vel: 1.0
  dof_pos: 1.0
  dof_vel: 0.1
  filter_weight: 0.1
  push_force: 0.1
  push_torque: 0.5
  clip_actions: 1.

noise:
  gravity:
    range: [0., 0.01]
    operation: "additive"
    distribution: "uniform"
  lin_vel:
    range: [0., 0.02]
    operation: "additive"
    distribution: "gaussian"
  ang_vel:
    range: [0., 0.02]
    operation: "additive"
    distribution: "gaussian"
  dof_pos:
    range: [0., 0.01]
    operation: "additive"
    distribution: "gaussian"
  dof_vel:
    range: [0., 0.05]
    operation: "additive"
    distribution: "gaussian"
  height:
    range: [0., 0.02]
    operation: "additive"
    distribution: "uniform"
  init_base_lin_vel_xy:
    range: [0., 0.05]
    operation: "additive"
    distribution: "gaussian"

  kick_interval_s: 5.  # Less frequent kicks during imitation
  kick_lin_vel:
    range: [0., 0.05]
    operation: "additive"
    distribution: "gaussian"
  kick_ang_vel:
    range: [0., 0.01]
    operation: "additive"
    distribution: "gaussian"

  push_interval_s: 8.  # Less frequent pushes during imitation
  push_duration_s: 1.
  push_force:
    range: [0., 5.]  # Reduced push forces
    operation: "additive"
    distribution: "gaussian"
  push_torque:
    range: [0., 1.]
    operation: "additive"
    distribution: "gaussian"

  dof_stiffness:
    range: [0.95, 1.05]
    operation: "scaling"
    distribution: "uniform"
  dof_damping:
    range: [0.95, 1.05]
    operation: "scaling"
    distribution: "uniform"
  dof_friction:
    range: [0.0, 1.0]  # Reduced friction variation
    operation: "additive"
    distribution: "uniform"

  friction:
    range: [0.5, 1.5]  # Reduced friction variation
    operation: "additive"
    distribution: "uniform"
  compliance:
    range: [0.8, 1.2]
    operation: "additive"
    distribution: "uniform"
  restitution:
    range: [0.0, 0.5]
    operation: "additive"
    distribution: "uniform"

  base_com:
    range: [-0.05, 0.05]  # Reduced COM variation
    operation: "additive"
    distribution: "uniform"
  base_mass:
    range: [0.9, 1.1]
    operation: "scaling"
    distribution: "uniform"
  other_com:
    range: [-0.002, 0.002]
    operation: "additive"
    distribution: "uniform"
  other_mass:
    range: [0.99, 1.01]
    operation: "scaling"
    distribution: "uniform"

# ============ LOCOMOTION REWARDS (from base T1) ============
rewards:
  scales:
    # Locomotion rewards (reduced weights)
    survival: 0.1
    tracking_lin_vel_x: 0.2
    tracking_lin_vel_y: 0.2
    tracking_ang_vel: 0.1
    base_height: -5.
    orientation: -2.
    torques: -1.e-4
    torque_tiredness: -5.e-3
    power: -1.e-3
    lin_vel_z: -1.
    ang_vel_xy: -0.1
    dof_vel: -5.e-5
    dof_acc: -5.e-8
    root_acc: -5.e-5
    action_rate: -0.5
    dof_pos_limits: -0.5
    dof_vel_limits: -0.
    torque_limits: -0.
    collision: -0.5
    feet_slip: -0.05
    feet_vel_z: -0.
    feet_yaw_diff: -0.5
    feet_yaw_mean: -0.5
    feet_roll: -0.05
    feet_distance: -0.5
    feet_swing: 1.5
    
    # ============ IMITATION REWARDS (optimized for speed) ============
    imitation_root_pos: 12.0      # Increased for faster position learning
    imitation_root_rot: 6.0       # Increased for faster orientation learning
    imitation_root_vel: 3.0       # Increased for better tracking
    imitation_root_ang_vel: 2.0   # Increased for better tracking
    imitation_dof_pos: 20.0       # Higher for fastest joint learning (main focus)
    imitation_dof_vel: 2.0        # Increased for better motion quality
    
    # ============ DANCE QUALITY REWARDS ============
    motion_smoothness: 1.0        # Reduced initially - focus on tracking first
    
  episode_length_s: 30.  # Shorter episodes for faster learning (was 59s) - learn first 30s initially
  terminate_height: 0.3   # Lower termination height
  terminate_vel: 50.
  terminate_contacts_on: []
  penalize_contacts_on: ["Trunk", "H1", "H2", "AL", "AR", "Waist", "Hip", "Shank", "Ankle"]
  only_positive_rewards: true
  tracking_sigma: 0.25
  base_height_target: 0.68
  soft_dof_pos_limit: 1.
  soft_dof_vel_limit: 1.
  soft_torque_limit: 1.
  swing_period: 0.2
  feet_distance_ref: 0.2

# ============ IMITATION-SPECIFIC CONFIGURATION ============
imitation:
  # Motion data configuration
  motion_dir: "motion_data/t1_4dof/"  # Directory containing PKL files
  motion_files: null  # null = load all PKL files in motion_dir
  
  # Motion playback settings
  loop_motions: true  # Enable looping for consistent training
  resample_motions_on_reset: true  # Sample new motion on environment reset
  time_offset_range: [0.0, 0.0]  # Always start at beginning (target segment: 0s-57s)
  
  # Reward weighting - focus on imitation
  imitation_weight: 1.0   # Weight for imitation rewards
  locomotion_weight: 0.02  # Very small weight for basic stability rewards
  
  # Imitation reward scaling parameters
  pos_reward_scale: 0.5       # Position error scaling (smaller = more sensitive)
  rot_reward_scale: 0.5       # Rotation error scaling  
  vel_reward_scale: 2.0       # Velocity error scaling
  ang_vel_reward_scale: 1.0   # Angular velocity error scaling
  dof_pos_reward_scale: 1.0   # Joint position error scaling
  dof_vel_reward_scale: 0.1   # Joint velocity error scaling
  
  # Observation configuration
  include_reference_in_obs: false  # Whether to include reference motion in observations
  
  # Direct PKL imitation - no transfer learning or curriculum
  curriculum_learning: false

# ============ RANDOMIZATION ============
randomization:
  init_dof_pos:
    range: [0., 0.05]
    operation: "additive"
    distribution: "gaussian"
  init_base_pos_xy:
    range: [-0.1, 0.1]  # Much smaller base position randomization
    operation: "additive"
    distribution: "uniform"
  init_base_lin_vel_xy:
    range: [0., 0.1]
    operation: "additive"
    distribution: "gaussian"

  kick_interval_s: 20.  # Much less frequent kicks
  kick_lin_vel:
    range: [0., 0.02]  # Much smaller kicks
    operation: "additive"
    distribution: "gaussian"
  kick_ang_vel:
    range: [0., 0.005]  # Much smaller angular kicks
    operation: "additive"
    distribution: "gaussian"

  push_interval_s: 30.  # Much less frequent pushes
  push_duration_s: 0.5  # Shorter pushes
  push_force:
    range: [0., 2.]  # Much smaller push forces
    operation: "additive"
    distribution: "gaussian"
  push_torque:
    range: [0., 0.5]  # Much smaller push torques
    operation: "additive"
    distribution: "gaussian"

  dof_stiffness:
    range: [0.95, 1.05]
    operation: "scaling"
    distribution: "uniform"
  dof_damping:
    range: [0.95, 1.05]
    operation: "scaling"
    distribution: "uniform"
  dof_friction:
    range: [0.0, 2.0]
    operation: "additive"
    distribution: "uniform"

  friction:
    range: [0.1, 2.0]
    operation: "additive"
    distribution: "uniform"
  compliance:
    range: [0.5, 1.5]
    operation: "additive"
    distribution: "uniform"
  restitution:
    range: [0.1, 0.9]
    operation: "additive"
    distribution: "uniform"

  base_com:
    range: [-0.1, 0.1]
    operation: "additive"
    distribution: "uniform"
  base_mass:
    range: [0.8, 1.2]
    operation: "scaling"
    distribution: "uniform"
  other_com:
    range: [-0.005, 0.005]
    operation: "additive"
    distribution: "uniform"
  other_mass:
    range: [0.98, 1.02]
    operation: "scaling"
    distribution: "uniform"